name: Release

on:
  push:
    tags:
      - v*

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows,linux]
        goarch: [amd64]
        exclude:
          # Exclude i386 on darwin and dragonfly.
          - goarch: 386
            goos: dragonfly
          - goarch: 386
            goos: darwin
          - goarch: 386
            goos: windows
        include:
          # BEGIN Other architectures
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: arm64
          # END Other architectures
      fail-fast: false

    runs-on: windows-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Show workflow information
        id: get_filename
        run: |
          $NAME=$env:GOOS+'-'+$env:GOARCH
          $ASSET_NAME=$NAME
          echo "GOOS:"$env:GOOS",GOARCH:"$env:GOARCH",GOARM:"$env:GOARM", RELEASE_NAME:"$env:NAME
          echo "ASSET_NAME=$NAME" >> $GITHUB_OUTPUT
          echo "ASSET_NAME=$NAME" >> $GITHUB_ENV

      - name: download web view
        uses: robinraju/release-downloader@v1
        with:
          repository: 'chuccp/d-mail-view'
          latest: true
          fileName: 'd-mail-view.zip'

      - name: unzip web view
        run: |
          unzip -o d-mail-view.zip -d webview
          mkdir -p build_assets
          cp -r webview ./build_assets/web

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.2

      - name: Get project dependencies
        run: go mod download

      - name: Build d-mail
        run: |
          go build -v -o build_assets/d-mail -trimpath -ldflags "-s -w -buildid=" .

      - name: Rename Windows d-mail
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv d-mail d-mail.exe

      - name: Sign Windows d-mail
        if: matrix.goos == 'windows'
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: '${{ secrets.CERTIFICATE }}'
          password: '${{ secrets.CERTIFICATE_PASSWORD }}'
          folder: 'build_assets'
          recursive: true
          files: |
            d-mail.exe
          description: 'sign d-mail.exe'

      - name: Create ZIP archive
        run: |
          pushd build_assets || exit 1
          tar -czvf ../d-mail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz .
          popd || exit 1

      - name: Upload tar.gz file to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: d-mail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          path: d-mail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

      - name: Upload files to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./d-mail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz*
          tag: ${{ github.ref }}